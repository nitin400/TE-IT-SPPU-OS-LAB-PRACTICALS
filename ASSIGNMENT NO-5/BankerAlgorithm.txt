Name-NITIN PARASRAM ANDHALE
DIV-1
ROLL NO- I3111


PROBLEM STATEMENT-  Implement the C program forDeadlock Avoidance Algorithm: Bankers Algorithm.








CODE:-

#include<stdio.h>
struct process
{
	int all[6],max[6],need[6],finished,request[6];
}p[10];
int avail[6],sseq[10],ss=0,check1=0,check2=0,n,pid,work[6];
int nor,nori;
void main()
{
	int safeseq(void);
	int ch,i=0,j=0,k,pid,ch1;
	int violationcheck=0,waitcheck=0;
	do
	{
	//clrscr();
		printf("\n\n\t 1. Input");
		printf("\n\n\t 2. Safe State or Not");
		printf("\n\n\t 3. print");
		printf("\n\n\t 4. Exit");
		printf("\n\n\t Enter ur choice : ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
				printf("\n\n\t Enter number of processes : ");
				scanf("%d",&n);
				printf("\n\n\t Enter the Number of Resources : ");
				scanf("%d",&nor);
				printf("\n\n\t Enter the Available Resouces : ");
				for(j=0;j<n;j++)
				{
					for(k=0;k<nor;k++)
					{
						if(j==0)
						{
							printf("\n\n\t For Resource type %d : ",k);
							scanf("%d",&avail[k]);
						}
						p[j].max[k]=0;
						p[j].all[k]=0;
						p[j].need[k]=0;
						p[j].finished=0;
						p[j].request[k]=0;
					}
				}
				for(i=0;i<n;i++)
				{
					printf("\n\n\t Enter Max and Allocated resources for P%d : ",i);
					for(j=0;j<nor;j++)
					{
						printf("\n\n\t Enter the Max of resource %d : ",j);
						scanf("%d",&p[i].max[j]);
						printf("\n\n\t Allocation of resource %d    : ",j);
						scanf("%d",&p[i].all[j]);
						if(p[i].all[j]>p[i].max[j])
						{
							printf("\n\n\t Allocation should be less < or == max");
							j--;
						}
						else
						p[i].need[j]=p[i].max[j]-p[i].all[j];
						avail[j]=avail[j]-p[i].all[j];
					}
				}
				break;
			case 2:
				if(safeseq()==1)
					printf("\n\n\t The System is in safe state ");
				else
					printf("\n\n\t The System is Not in safe state ");
				break;
			case 3:
				printf("\n\n\t Number of processes : %d",n);
				printf("\n\n\t Number of Resoures : %d",nor);
				printf("\n\n\t Pid \t   Max \t   Allocated \t Need ");
				for(i=0;i<n;i++)
				{
					printf("\n\n\t  P%d : ",i);
					for(j=0;j<nor;j++)
						printf(" %d ",p[i].max[j]);
					printf("\t");
					for(j=0;j<nor;j++)
						printf(" %d ",p[i].all[j]);
					printf("\t");
					for(j=0;j<nor;j++)
						printf(" %d ",p[i].need[j]);
				}
				printf("\n\n\t Available : ");
				for(i=0;i<nor;i++)
					printf(" %d ",avail[i]);
				break;
			case 4: exit(0);
		}
	//getch();
	}while(ch!=4);
}
int safeseq()
{
	int i,j,k;
	ss=0;
	for(j=0;j<nor;j++)
		work[j]=avail[j];
	for(j=0;j<n;j++)
		p[j].finished=0;
	for(k=0;k<nor;k++)
	{
		for(j=0;j<n;j++)
		{
			if(p[j].finished==0)
			{
				check1=0;
				for(k=0;k<nor;k++)
					if(p[j].need[k]<=work[k])
						check1++;
					if(check1==nor)
					{
						for(k=0;k<nor;k++)
						{
							work[k]=work[k]+p[j].all[k];
							p[j].finished=1;
						}
						sseq[ss]=j;
						ss++;
					}
			}
		}
	}
	check2=0;
	for(i=0;i<n;i++)
		if(p[i].finished==1)
			check2++;
		printf("\n\n\t");
		if(check2>=n)
		{
			printf("\n\n\t The system is in safe state");
			for(j=0;j<n;j++)
				printf("P%d, ",sseq[j]);
			return 1;
		}
		else
			printf("\n\n\t The system is Not in safe state");
		return 0;
}


// OUTPUT

OUTPUT:-
         1. Input
         2. Safe State or Not
         3. print
         4. Exit
         Enter ur choice : 1
         Enter number of processes : 5
         Enter the Number of Resources : 4
         Enter the Available Resouces :
         For Resource type 0 : 6
         For Resource type 1 : 7
         For Resource type 2 : 12
         For Resource type 3 : 12
         Enter Max and Allocated resources for P0 :
         Enter the Max of resource 0 : 0
         Allocation of resource 0    : 0
         Enter the Max of resource 1 : 0
         Allocation of resource 1    : 0
         Enter the Max of resource 2 : 1
         Allocation of resource 2    : 1
         Enter the Max of resource 3 : 2
         Allocation of resource 3    : 2
         Enter Max and Allocated resources for P1 ;
         Enter the Max of resource 0 : 2
         Allocation of resource 0    : 2
         Enter the Max of resource 1 : 7
         Allocation of resource 1    : 0
         Enter the Max of resource 2 : 5
         Allocation of resource 2    : 0
         Enter the Max of resource 3 : 0
         Allocation of resource 3    : 0
         Enter Max and Allocated resources for P2 :
         Enter the Max of resource 0 : 6
         Allocation of resource 0    : 0
         Enter the Max of resource 1 : 6
         Allocation of resource 1    : 0
         Enter the Max of resource 2 : 5
         Allocation of resource 2    : 3
         Enter the Max of resource 3 : 6
         Allocation of resource 3    : 4
         Enter Max and Allocated resources for P3 :
         Enter the Max of resource 0 : 4
         Allocation of resource 0    : 2
         Enter the Max of resource 1 : 3
         Allocation of resource 1    : 3
         Enter the Max of resource 2 : 5
         Allocation of resource 2    : 5
         Enter the Max of resource 3 : 6
         Allocation of resource 3    : 4
         Enter Max and Allocated resources for P4 :
         Enter the Max of resource 0 : 0
         Allocation of resource 0    : 0
         Enter the Max of resource 1 : 6
         Allocation of resource 1    : 3
         Enter the Max of resource 2 : 5
         Allocation of resource 2    : 3
         Enter the Max of resource 3 : 2
         Allocation of resource 3    : 2

         1. Input
         2. Safe State or Not
         3. print
         4. Exit
         Enter ur choice : 4
         Number of processes : 5
         Number of Resoures : 4
         Pid       Max     Allocated     Need
          P0 :  0  0  1  2       0  0  1  2      0  0  0  0
          P1 :  2  7  5  0       2  0  0  0      0  7  5  0
          P2 :  6  6  5  6       0  0  3  4      6  6  2  2
          P3 :  4  3  5  6       2  3  5  4      2  0  0  2
          P4 :  0  6  5  2       0  3  3  2      0  3  2  0
         Available :  2  1  0  0

         1. Input
         2. Safe State or Not
         3. print
         4. Exit
         Enter ur choice : 2
         The system is in safe stateP0, P3, P4, P1, P2,
         The System is in safe state

